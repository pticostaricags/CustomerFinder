// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using CustomerFinderCognitiveServices.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace CustomerFinderCognitiveServices.Models
{
    public partial class SentimentBatchResultV2
    {
        private IList<SentimentBatchResultItemV2> _documents;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<SentimentBatchResultItemV2> Documents
        {
            get { return this._documents; }
            set { this._documents = value; }
        }
        
        private IList<ErrorRecordV2> _errors;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<ErrorRecordV2> Errors
        {
            get { return this._errors; }
            set { this._errors = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the SentimentBatchResultV2 class.
        /// </summary>
        public SentimentBatchResultV2()
        {
            this.Documents = new LazyList<SentimentBatchResultItemV2>();
            this.Errors = new LazyList<ErrorRecordV2>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken documentsSequence = ((JToken)inputObject["documents"]);
                if (documentsSequence != null && documentsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken documentsValue in ((JArray)documentsSequence))
                    {
                        SentimentBatchResultItemV2 sentimentBatchResultItemV2 = new SentimentBatchResultItemV2();
                        sentimentBatchResultItemV2.DeserializeJson(documentsValue);
                        this.Documents.Add(sentimentBatchResultItemV2);
                    }
                }
                JToken errorsSequence = ((JToken)inputObject["errors"]);
                if (errorsSequence != null && errorsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken errorsValue in ((JArray)errorsSequence))
                    {
                        ErrorRecordV2 errorRecordV2 = new ErrorRecordV2();
                        errorRecordV2.DeserializeJson(errorsValue);
                        this.Errors.Add(errorRecordV2);
                    }
                }
            }
        }
    }
}
