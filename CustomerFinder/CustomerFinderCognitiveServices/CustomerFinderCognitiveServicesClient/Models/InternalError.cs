// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using CustomerFinderCognitiveServices.Models;
using Newtonsoft.Json.Linq;

namespace CustomerFinderCognitiveServices.Models
{
    public partial class InternalError
    {
        private string _code;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Code
        {
            get { return this._code; }
            set { this._code = value; }
        }
        
        private InternalError _innerError;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public InternalError InnerError
        {
            get { return this._innerError; }
            set { this._innerError = value; }
        }
        
        private string _message;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Message
        {
            get { return this._message; }
            set { this._message = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the InternalError class.
        /// </summary>
        public InternalError()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken codeValue = inputObject["code"];
                if (codeValue != null && codeValue.Type != JTokenType.Null)
                {
                    this.Code = ((string)codeValue);
                }
                JToken innerErrorValue = inputObject["innerError"];
                if (innerErrorValue != null && innerErrorValue.Type != JTokenType.Null)
                {
                    InternalError internalError = new InternalError();
                    internalError.DeserializeJson(innerErrorValue);
                    this.InnerError = internalError;
                }
                JToken messageValue = inputObject["message"];
                if (messageValue != null && messageValue.Type != JTokenType.Null)
                {
                    this.Message = ((string)messageValue);
                }
            }
        }
    }
}
