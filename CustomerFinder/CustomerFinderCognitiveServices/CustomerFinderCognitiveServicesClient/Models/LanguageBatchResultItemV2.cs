// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using CustomerFinderCognitiveServices.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace CustomerFinderCognitiveServices.Models
{
    public partial class LanguageBatchResultItemV2
    {
        private IList<DetectedLanguageV2> _detectedLanguages;
        
        /// <summary>
        /// Optional. A list of extracted languages.
        /// </summary>
        public IList<DetectedLanguageV2> DetectedLanguages
        {
            get { return this._detectedLanguages; }
            set { this._detectedLanguages = value; }
        }
        
        private string _id;
        
        /// <summary>
        /// Optional. Unique document identifier.
        /// </summary>
        public string ID
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the LanguageBatchResultItemV2 class.
        /// </summary>
        public LanguageBatchResultItemV2()
        {
            this.DetectedLanguages = new LazyList<DetectedLanguageV2>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken detectedLanguagesSequence = ((JToken)inputObject["detectedLanguages"]);
                if (detectedLanguagesSequence != null && detectedLanguagesSequence.Type != JTokenType.Null)
                {
                    foreach (JToken detectedLanguagesValue in ((JArray)detectedLanguagesSequence))
                    {
                        DetectedLanguageV2 detectedLanguageV2 = new DetectedLanguageV2();
                        detectedLanguageV2.DeserializeJson(detectedLanguagesValue);
                        this.DetectedLanguages.Add(detectedLanguageV2);
                    }
                }
                JToken idValue = inputObject["id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.ID = ((string)idValue);
                }
            }
        }
    }
}
